
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9680E4C589859855CB0FBCD3A99FE814'
    
_lr_action_items = {'$end':([1,5,16,],[-1,0,-2,]),'FLOAT':([0,8,10,17,18,19,22,27,28,29,30,33,],[2,2,2,2,2,2,2,2,2,2,2,2,]),'BEGIN':([2,3,4,6,9,],[-20,-17,-19,-18,10,]),'INT':([0,8,10,17,18,19,22,27,28,29,30,33,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'ASSIGN':([2,3,4,6,7,],[-20,-17,-19,-18,8,]),'SEMICOLUMN':([2,3,4,6,14,15,20,21,32,34,35,36,37,38,],[-20,-17,-19,-18,19,-6,-5,-11,-13,-8,-9,-7,-10,-12,]),'COMMA':([2,3,4,6,21,24,25,34,35,36,37,38,],[-20,-17,-19,-18,-11,-16,33,-8,-9,-7,-10,-12,]),'VAR':([0,8,10,17,18,19,22,27,28,29,30,33,],[3,3,13,3,3,13,3,3,3,3,3,3,]),'CLOSEPRACS':([2,3,4,6,21,23,24,25,31,34,35,36,37,38,39,],[-20,-17,-19,-18,-11,32,-16,-14,38,-8,-9,-7,-10,-12,-15,]),'OPENPRACS':([13,17,18,22,27,28,29,30,33,],[18,22,22,22,22,22,22,22,22,]),'MINUS':([2,3,4,6,21,],[-20,-17,-19,-18,27,]),'MULTIPLY':([2,3,4,6,21,],[-20,-17,-19,-18,28,]),'END':([11,19,26,],[16,-4,-3,]),'PLUS':([2,3,4,6,21,],[-20,-17,-19,-18,29,]),'DIVID':([2,3,4,6,21,],[-20,-17,-19,-18,30,]),'EQUAL':([2,4,6,12,13,],[-20,-19,-18,17,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameterList':([18,33,],[23,39,]),'foreach':([0,],[1,]),'expr':([17,18,22,27,28,29,30,33,],[20,24,31,34,35,36,37,24,]),'Start':([0,],[5,]),'statementlist':([10,19,],[11,26,]),'statement':([10,19,],[14,14,]),'constant':([0,8,10,17,18,19,22,27,28,29,30,33,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'functioncall':([10,19,],[15,15,]),'var':([0,8,10,17,18,19,22,27,28,29,30,33,],[7,9,12,21,21,12,21,21,21,21,21,21,]),'parameter':([18,33,],[25,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Start","S'",1,None,None,None),
  ('Start -> foreach','Start',1,'p_startforeach','parse.py',43),
  ('foreach -> var ASSIGN var BEGIN statementlist END','foreach',6,'p_foreach','parse.py',47),
  ('statementlist -> statement SEMICOLUMN statementlist','statementlist',3,'p_statementlist','parse.py',55),
  ('statementlist -> statement SEMICOLUMN','statementlist',2,'p_statementlist','parse.py',56),
  ('statement -> var EQUAL expr','statement',3,'p_statement','parse.py',64),
  ('statement -> functioncall','statement',1,'p_statement','parse.py',65),
  ('expr -> var PLUS expr','expr',3,'p_expr','parse.py',73),
  ('expr -> var MINUS expr','expr',3,'p_expr','parse.py',74),
  ('expr -> var MULTIPLY expr','expr',3,'p_expr','parse.py',75),
  ('expr -> var DIVID expr','expr',3,'p_expr','parse.py',76),
  ('expr -> var','expr',1,'p_expr','parse.py',77),
  ('expr -> OPENPRACS expr CLOSEPRACS','expr',3,'p_expr','parse.py',78),
  ('functioncall -> VAR OPENPRACS parameterList CLOSEPRACS','functioncall',4,'p_function','parse.py',86),
  ('parameterList -> parameter','parameterList',1,'p_parameterList','parse.py',94),
  ('parameterList -> parameter COMMA parameterList','parameterList',3,'p_parameterList','parse.py',95),
  ('parameter -> expr','parameter',1,'p_parameter','parse.py',103),
  ('var -> VAR','var',1,'p_var','parse.py',111),
  ('var -> constant','var',1,'p_var','parse.py',112),
  ('constant -> INT','constant',1,'p_constant','parse.py',120),
  ('constant -> FLOAT','constant',1,'p_constant','parse.py',121),
]
