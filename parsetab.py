
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C3D1B0D051A94549FFDFCBB0AE72E282'
    
_lr_action_items = {'OPENPRACS':([13,18,20,22,29,30,31,32,33,],[18,22,22,22,22,22,22,22,22,]),'CLOSEPRACS':([1,2,3,7,23,24,25,26,28,35,36,37,38,39,40,],[-21,-18,-19,-20,-15,-17,-12,34,35,-13,-16,-9,-8,-11,-10,]),'VAR':([0,4,9,11,17,18,19,20,22,29,30,31,32,33,],[2,2,2,13,13,2,-3,2,2,2,2,2,2,2,]),'BEGIN':([1,2,3,7,10,],[-21,-18,-19,-20,11,]),'$end':([4,5,8,19,],[-1,0,-2,-3,]),'FLOAT':([0,4,9,11,17,18,19,20,22,29,30,31,32,33,],[1,1,1,1,1,1,-3,1,1,1,1,1,1,1,]),'MULTIPLY':([1,2,3,7,25,],[-21,-18,-19,-20,33,]),'COMMA':([1,2,3,7,23,24,25,35,37,38,39,40,],[-21,-18,-19,-20,29,-17,-12,-13,-9,-8,-11,-10,]),'MINUS':([1,2,3,7,25,],[-21,-18,-19,-20,30,]),'PLUS':([1,2,3,7,25,],[-21,-18,-19,-20,31,]),'ASSIGN':([1,2,3,6,7,],[-21,-18,-19,9,-20,]),'SEMICOLUMN':([1,2,3,7,12,16,25,27,34,35,37,38,39,40,],[-21,-18,-19,-20,17,-7,-12,-6,-14,-13,-9,-8,-11,-10,]),'EQUAL':([1,3,7,13,15,],[-21,-19,-20,-18,20,]),'DIVID':([1,2,3,7,25,],[-21,-18,-19,-20,32,]),'END':([14,17,21,],[19,-5,-4,]),'INT':([0,4,9,11,17,18,19,20,22,29,30,31,32,33,],[7,7,7,7,7,7,-3,7,7,7,7,7,7,7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([11,17,],[12,12,]),'constant':([0,4,9,11,17,18,20,22,29,30,31,32,33,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'var':([0,4,9,11,17,18,20,22,29,30,31,32,33,],[6,6,10,15,15,25,25,25,25,25,25,25,25,]),'expr':([18,20,22,29,30,31,32,33,],[24,27,28,24,37,38,39,40,]),'parameter':([18,29,],[23,23,]),'parameterList':([18,29,],[26,36,]),'functioncall':([11,17,],[16,16,]),'Start':([0,4,],[5,8,]),'statementlist':([11,17,],[14,21,]),'foreach':([0,4,],[4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Start","S'",1,None,None,None),
  ('Start -> foreach','Start',1,'p_startforeach','parse.py',47),
  ('Start -> foreach Start','Start',2,'p_startforeach','parse.py',48),
  ('foreach -> var ASSIGN var BEGIN statementlist END','foreach',6,'p_foreach','parse.py',52),
  ('statementlist -> statement SEMICOLUMN statementlist','statementlist',3,'p_statementlist','parse.py',60),
  ('statementlist -> statement SEMICOLUMN','statementlist',2,'p_statementlist','parse.py',61),
  ('statement -> var EQUAL expr','statement',3,'p_statement','parse.py',69),
  ('statement -> functioncall','statement',1,'p_statement','parse.py',70),
  ('expr -> var PLUS expr','expr',3,'p_expr','parse.py',78),
  ('expr -> var MINUS expr','expr',3,'p_expr','parse.py',79),
  ('expr -> var MULTIPLY expr','expr',3,'p_expr','parse.py',80),
  ('expr -> var DIVID expr','expr',3,'p_expr','parse.py',81),
  ('expr -> var','expr',1,'p_expr','parse.py',82),
  ('expr -> OPENPRACS expr CLOSEPRACS','expr',3,'p_expr','parse.py',83),
  ('functioncall -> VAR OPENPRACS parameterList CLOSEPRACS','functioncall',4,'p_function','parse.py',91),
  ('parameterList -> parameter','parameterList',1,'p_parameterList','parse.py',99),
  ('parameterList -> parameter COMMA parameterList','parameterList',3,'p_parameterList','parse.py',100),
  ('parameter -> expr','parameter',1,'p_parameter','parse.py',108),
  ('var -> VAR','var',1,'p_var','parse.py',116),
  ('var -> constant','var',1,'p_var','parse.py',117),
  ('constant -> INT','constant',1,'p_constant','parse.py',125),
  ('constant -> FLOAT','constant',1,'p_constant','parse.py',126),
]
